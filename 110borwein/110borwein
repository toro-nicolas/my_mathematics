#!/bin/python3
import math
from sys import argv, stderr
from error_case import *


def print_usage():
    print("USAGE")
    print("    ./110borwein n")
    print("DESCRIPTION")
    print("    n   constant defining the integral to be computed")


def borwein(n, x):
    p = 0.0
    if x == 0.0:
        return 1
    for i in range(0, n + 1):
        numerator = math.sin(x / (2 * i + 1))
        denominator = x / (2 * i + 1)
        if i == 0:
            p = numerator / denominator
        else:
            p *= numerator / denominator
    return p


def rectangle(n, b, m):
    a = 0
    result = 0
    h = (b - a) / m
    for i in range(0, m):
        result += borwein(n, a + i * h)
    return h * result


def midpoint(n, b, m):
    a = 0
    result = 0
    h = (b - a) / m
    for i in range(0, m):
        result += borwein(n, a + i * h + (h / 2))
    return h * result


def trapezoidal(n, b, m):
    a = 0
    result = 0
    h = (b - a) / m
    new_h = (b - a) / (2 * m)
    for i in range(1, m):
        result += borwein(n, a + i * h)
    return new_h * (borwein(n, a) + borwein(n, b) + (2 * result))


def simpson(n, b, m):
    a = 0
    result1 = 0
    result2 = 0
    h = (b - a) / m
    new_h = (b - a) / (6 * m)
    for i in range(1, m):
        result1 += borwein(n, a + i * h)
    for i in range(0, m):
        result2 += borwein(n, a + i * h + (h / 2))
    return new_h * (borwein(n, a) + borwein(n, b) + (2 * result1) + (4 * result2))


def get_diff(i, pi):
    result = pi - i
    print("diff = {:.10f}".format(result))


if __name__ == "__main__":
    if len(argv) == 2 and argv[1] == "-h":
        print_usage()
        exit(0)
    else:
        my_pi = math.pi / 2
        n = []
        if check_args(argv, n) == 84:
            exit(84)
        try:
            print("Midpoint:")
            midpoint_value = midpoint(n[0], 5000, 10000)
            print("I" + str(n[0]) + " = {:.10f}".format(midpoint_value))
            get_diff(midpoint_value, my_pi)
            print("\nTrapezoidal:")
            trapezoidal_value = trapezoidal(n[0], 5000, 10000)
            print("I" + str(n[0]) + " = {:.10f}".format(trapezoidal_value))
            get_diff(trapezoidal_value, my_pi)
            print("\nSimpson:")
            simpson_value = simpson(n[0], 5000, 10000)
            print("I" + str(n[0]) + " = {:.10f}".format(simpson_value))
            get_diff(simpson_value, my_pi)

        except Exception:
            print("An error occured", file=stderr)
            exit(84)
    exit(0)
